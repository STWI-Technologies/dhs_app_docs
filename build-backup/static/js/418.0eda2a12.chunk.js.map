{"version":3,"file":"static/js/418.0eda2a12.chunk.js","mappings":"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","sources":["webpack://dhs-knowledge-base/./src/components/Header/Header.module.css?4e72","components/Header/Header.jsx","components/LanguageSwitcher/LanguageContext.jsx","webpack://dhs-knowledge-base/./src/components/LanguageSwitcher/LanguageSwitcher.module.css?af3a","components/LanguageSwitcher/LanguageSwitcher.jsx","pages/KBArticle.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__HXQOm\",\"logoContainer\":\"Header_logoContainer__MYmTl\",\"logoLink\":\"Header_logoLink__w9XbH\",\"logo\":\"Header_logo__UsziS\",\"headerText\":\"Header_headerText__no-LG\",\"title\":\"Header_title__x3ga3\",\"subtitle\":\"Header_subtitle__4RLMY\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Header.module.css';\n\nconst Header = ({ \n  title = 'Direct Home Service', \n  subtitle = 'Customer Service Knowledge Base',\n  logoSrc = '/brand/logo-12.png',\n  logoAlt = 'Direct Home Service',\n  homeUrl = '/index.html'\n}) => {\n  return (\n    <header className={styles.header}>\n      <div className={styles.logoContainer}>\n        <a href={homeUrl} className={styles.logoLink}>\n          <img \n            src={logoSrc} \n            alt={logoAlt} \n            className={styles.logo}\n          />\n        </a>\n        <div className={styles.headerText}>\n          <h1 className={styles.title}>{title}</h1>\n          <p className={styles.subtitle}>{subtitle}</p>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  logoSrc: PropTypes.string,\n  logoAlt: PropTypes.string,\n  homeUrl: PropTypes.string\n};\n\nexport default Header;","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LanguageContext = createContext();\n\nexport const useLanguage = () => {\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n\nexport const LanguageProvider = ({ children }) => {\n  const [language, setLanguage] = useState('en');\n\n  useEffect(() => {\n    // Load saved language from localStorage on component mount\n    const savedLanguage = localStorage.getItem('dhs-language');\n    if (savedLanguage && ['en', 'es'].includes(savedLanguage)) {\n      setLanguage(savedLanguage);\n    } else {\n      // Detect user's browser language\n      const browserLang = navigator.language.toLowerCase();\n      if (browserLang.startsWith('es')) {\n        setLanguage('es');\n      }\n    }\n  }, []);\n\n  const changeLanguage = (newLanguage) => {\n    if (['en', 'es'].includes(newLanguage)) {\n      setLanguage(newLanguage);\n      localStorage.setItem('dhs-language', newLanguage);\n      \n      // Update document language and title\n      document.documentElement.lang = newLanguage;\n      \n      const titles = {\n        en: 'Direct Home Service - Knowledge Base',\n        es: 'Direct Home Service - Base de Conocimientos'\n      };\n      document.title = titles[newLanguage];\n    }\n  };\n\n  const value = {\n    language,\n    changeLanguage,\n    isEnglish: language === 'en',\n    isSpanish: language === 'es'\n  };\n\n  return (\n    <LanguageContext.Provider value={value}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n\nLanguageProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"languageSwitcher\":\"LanguageSwitcher_languageSwitcher__zm7gW\",\"languageBtn\":\"LanguageSwitcher_languageBtn__huEfn\",\"active\":\"LanguageSwitcher_active__wcvyc\",\"flag\":\"LanguageSwitcher_flag__pw7oo\",\"flagUs\":\"LanguageSwitcher_flagUs__pnTCu\",\"flagEs\":\"LanguageSwitcher_flagEs__xnu06\"};","import React from 'react';\nimport { useLanguage } from './LanguageContext';\nimport styles from './LanguageSwitcher.module.css';\n\nconst LanguageSwitcher = () => {\n  const { language, changeLanguage } = useLanguage();\n\n  const handleLanguageChange = (newLanguage) => {\n    changeLanguage(newLanguage);\n  };\n\n  return (\n    <div className={styles.languageSwitcher}>\n      <button\n        className={`${styles.languageBtn} ${language === 'en' ? styles.active : ''}`}\n        onClick={() => handleLanguageChange('en')}\n        aria-label=\"Switch to English\"\n        data-language=\"en\"\n      >\n        <span className={`${styles.flag} ${styles.flagUs}`} aria-hidden=\"true\"></span>\n        English\n      </button>\n      <button\n        className={`${styles.languageBtn} ${language === 'es' ? styles.active : ''}`}\n        onClick={() => handleLanguageChange('es')}\n        aria-label=\"Cambiar a Español\"\n        data-language=\"es\"\n      >\n        <span className={`${styles.flag} ${styles.flagEs}`} aria-hidden=\"true\"></span>\n        Español\n      </button>\n    </div>\n  );\n};\n\nexport default LanguageSwitcher;","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport Header from '../components/Header/Header';\nimport LanguageSwitcher from '../components/LanguageSwitcher/LanguageSwitcher';\nimport './KBArticle.css';\n\n// Import knowledge base content\nimport kbContent from '../data/knowledge-base-content.json';\n\nconst KBArticle = () => {\n  const { articleId } = useParams();\n  const navigate = useNavigate();\n  const { t, i18n } = useTranslation();\n  const [article, setArticle] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Find article by URL slug\n    const foundArticle = kbContent.articles.find(a => {\n      const slug = a.title.toLowerCase()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]/g, '');\n      return slug === articleId;\n    });\n\n    if (foundArticle) {\n      setArticle(foundArticle);\n    }\n    setLoading(false);\n  }, [articleId]);\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>{t('common.loading')}</p>\n      </div>\n    );\n  }\n\n  if (!article) {\n    return (\n      <div className=\"container\">\n        <Header />\n        <div className=\"error-container\">\n          <h2>{t('errors.articleNotFound')}</h2>\n          <p>{t('errors.articleNotFoundDesc')}</p>\n          <button onClick={() => navigate('/')} className=\"btn-primary\">\n            {t('common.backToHome')}\n          </button>\n        </div>\n        <LanguageSwitcher />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <Header />\n      \n      <div className=\"breadcrumb\">\n        <a href=\"/\">{t('common.home')}</a>\n        <span> / </span>\n        <a href={`/category/${article.category.toLowerCase().replace(/\\s+/g, '-')}`}>\n          {article.category}\n        </a>\n        <span> / </span>\n        <span>{article.title}</span>\n      </div>\n\n      <article className=\"kb-article\">\n        <h1>{article.title}</h1>\n        \n        <div className=\"article-meta\">\n          <span className=\"category-badge\">{article.category}</span>\n          <span className=\"last-updated\">\n            {t('article.lastUpdated')}: {new Date().toLocaleDateString(i18n.language)}\n          </span>\n        </div>\n\n        <div className=\"article-content\">\n          {article.content.overview && (\n            <section>\n              <h2>{t('article.overview')}</h2>\n              <p>{article.content.overview}</p>\n            </section>\n          )}\n\n          {article.content.keyFeatures && (\n            <section>\n              <h2>{t('article.keyFeatures')}</h2>\n              <ul>\n                {article.content.keyFeatures.map((feature, index) => (\n                  <li key={index}>{feature}</li>\n                ))}\n              </ul>\n            </section>\n          )}\n\n          {article.content.howTo && (\n            <section>\n              <h2>{t('article.howTo')}</h2>\n              <ol>\n                {article.content.howTo.map((step, index) => (\n                  <li key={index}>{step}</li>\n                ))}\n              </ol>\n            </section>\n          )}\n\n          {article.content.importantNotes && (\n            <section className=\"important-notes\">\n              <h2>{t('article.importantNotes')}</h2>\n              <ul>\n                {article.content.importantNotes.map((note, index) => (\n                  <li key={index}>{note}</li>\n                ))}\n              </ul>\n            </section>\n          )}\n        </div>\n\n        <div className=\"article-footer\">\n          <div className=\"article-tags\">\n            {article.keywords && article.keywords.map((keyword, index) => (\n              <span key={index} className=\"tag\">{keyword}</span>\n            ))}\n          </div>\n\n          <div className=\"article-actions\">\n            <button className=\"btn-secondary\" onClick={() => window.print()}>\n              {t('article.print')}\n            </button>\n            <button className=\"btn-secondary\" onClick={() => navigator.clipboard.writeText(window.location.href)}>\n              {t('article.shareLink')}\n            </button>\n          </div>\n        </div>\n      </article>\n\n      <LanguageSwitcher />\n    </div>\n  );\n};\n\nexport default KBArticle;"],"names":["_ref","title","subtitle","logoSrc","logoAlt","homeUrl","_jsx","className","styles","children","_jsxs","href","src","alt","LanguageContext","createContext","LanguageSwitcher","language","changeLanguage","useLanguage","context","useContext","Error","handleLanguageChange","newLanguage","concat","onClick","KBArticle","articleId","useParams","navigate","useNavigate","t","i18n","useTranslation","article","setArticle","useState","loading","setLoading","useEffect","foundArticle","kbContent","articles","find","a","toLowerCase","replace","Header","category","Date","toLocaleDateString","content","overview","keyFeatures","map","feature","index","howTo","step","importantNotes","note","keywords","keyword","window","print","navigator","clipboard","writeText","location"],"sourceRoot":""}